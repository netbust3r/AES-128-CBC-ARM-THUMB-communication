


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             SIMPLE_PROG,CODE,READONLY
    2 00000000         
    3 00000000         
    4 00000000         __keyexp
                               PROC
    5 00000000                 EXPORT           __keyexp
    6 00000000         
    7 00000000 E92D 1FFE       PUSH             {r1-r12}
    8 00000004         
    9 00000004 F04F 0A00       ldr              r10,=0x00000000
   10 00000008 F04F 0201       ldr              r2,=0x00000001 
                                                            ;rcon first column
   11 0000000C 4614            mov              r4,r2       ;store rcon to r4
   12 0000000E 4900            ldr              r1,=0x20000220 ;initial key pos
                                                            ition
   13 00000010 20000220        LTORG
   14 00000014         
   15 00000014         key_round
   16 00000014         
   17 00000014         ;;;;;;;;;;rotate word;;;;;;;;;;;;;;
   18 00000014         
   19 00000014 F101 020C       add              r2,r1,#0x0C ;next byte of origi
                                                            nal key
   20 00000018 6813            ldr              r3,[r2]
   21 0000001A EA4F 2333       ror              r3,r3,#8
   22 0000001E         
   23 0000001E         ;;;;;;;;;;;;;sbox;;;;;;;;;;;;;;;;;;
   24 0000001E         
   25 0000001E 461D            mov              r5,r3       ;save in r5 the rot
                                                            ated 4-byte column
   26 00000020         
   27 00000020 F003 03FF       and              r3,r3,#0x000000FF ;keep first b
                                                            yte  (pass paramete
                                                            r to __subbytes)
   28 00000024 B500            STMFD            sp!,{lr}
   29 00000026 F7FF FFFE       BL               __subbytes  ;call sbox
   30 0000002A F85D EB04       LDMFD            sp!,{lr}
   31 0000002E 7113            strb             r3,[r2,#4]  ;store after last c
                                                            olumn byte
   32 00000030         
   33 00000030 462B            mov              r3,r5
   34 00000032 EA4F 2333       ror              r3,r3,#8
   35 00000036 F003 03FF       and              r3,r3,#0x000000FF ;keep second 
                                                            byte  (pass paramet
                                                            er to __subbytes)
   36 0000003A B500            STMFD            sp!,{lr}
   37 0000003C F7FF FFFE       BL               __subbytes  ;call sbox
   38 00000040 F85D EB04       LDMFD            sp!,{lr}
   39 00000044 7153            strb             r3,[r2,#5]  ;store next byte
   40 00000046         
   41 00000046 462B            mov              r3,r5
   42 00000048 EA4F 4333       ror              r3,r3,#16
   43 0000004C F003 03FF       and              r3,r3,#0x000000FF ;keep third b
                                                            yte  (pass paramete
                                                            r to __subbytes)
   44 00000050 B500            STMFD            sp!,{lr}
   45 00000052 F7FF FFFE       BL               __subbytes  ;call sbox
   46 00000056 F85D EB04       LDMFD            sp!,{lr}
   47 0000005A 7193            strb             r3,[r2,#6]  ;store next byte



ARM Macro Assembler    Page 2 


   48 0000005C         
   49 0000005C 462B            mov              r3,r5
   50 0000005E EA4F 6333       ror              r3,r3,#24
   51 00000062 F003 03FF       and              r3,r3,#0x000000FF ;keep fourth 
                                                            byte  (pass paramet
                                                            er to __subbytes)
   52 00000066 B500            STMFD            sp!,{lr}
   53 00000068 F7FF FFFE       BL               __subbytes  ;call sbox
   54 0000006C F85D EB04       LDMFD            sp!,{lr}
   55 00000070 71D3            strb             r3,[r2,#7]  ;store next byte
   56 00000072         
   57 00000072         ;;;;;;;;;;;;;;;rcon;;;;;;;;;;;;;;;;;
   58 00000072         
   59 00000072         ;; 1st col
   60 00000072 6853            ldr              r3,[r2,#4]  ;load new column in
                                                             r3
   61 00000074 EA83 0304       eor              r3,r3,r4    ;xor with rcon colu
                                                            mn
   62 00000078 680D            ldr              r5,[r1]
   63 0000007A EA83 0305       eor              r3,r3,r5    ;xor with initial k
                                                            ey column
   64 0000007E 610B            str              r3,[r1,#16] ;store column in sa
                                                            me position
   65 00000080         
   66 00000080         ;; 2nd col
   67 00000080 684D            ldr              r5,[r1,#4]
   68 00000082 EA83 0305       eor              r3,r3,r5
   69 00000086 614B            str              r3,[r1,#20] ;store column in ne
                                                            xt position
   70 00000088         
   71 00000088         ;; 3rd col
   72 00000088 688D            ldr              r5,[r1,#8]
   73 0000008A EA83 0305       eor              r3,r3,r5
   74 0000008E 618B            str              r3,[r1,#24] ;store column in ne
                                                            xt position
   75 00000090         
   76 00000090         ;; 4th col
   77 00000090 68CD            ldr              r5,[r1,#12]
   78 00000092 EA83 0305       eor              r3,r3,r5
   79 00000096 61CB            str              r3,[r1,#28] ;store column in ne
                                                            xt position
   80 00000098         
   81 00000098 F101 0110       add              r1,r1,#16
   82 0000009C         
   83 0000009C F1BA 0F00       cmp              r10,#0
   84 000000A0 D107            bne              last_round
   85 000000A2         
   86 000000A2 4424            add              r4,r4,r4    ;next value for rco
                                                            n
   87 000000A4 2C80            cmp              r4,#0x80
   88 000000A6 DDB5            ble              key_round
   89 000000A8         
   90 000000A8 F04F 041B       mov              r4,0x1b
   91 000000AC F10A 0A01       add              r10,r10,#1
   92 000000B0 E7B0            b                key_round
   93 000000B2         
   94 000000B2         last_round
   95 000000B2 F1BA 0F02       cmp              r10,#2
   96 000000B6 D004            beq              end_key



ARM Macro Assembler    Page 3 


   97 000000B8 F04F 0436       mov              r4,0x36
   98 000000BC F10A 0A01       add              r10,r10,#1
   99 000000C0 E7A8            b                key_round
  100 000000C2         end_key
  101 000000C2         
  102 000000C2 E8BD 1FFE       POP              {r1-r12}
  103 000000C6 4770            BX               R14
  104 000000C8                 ENDP
  105 000000C8         
  106 000000C8         
  107 000000C8         __encr  PROC
  108 000000C8                 EXPORT           __encr
  109 000000C8         
  110 000000C8 E92D 1FFE       PUSH             {r1-r12}
  111 000000CC         ;;;;;;;;;;;;;;addroundkey;;;;;;;;;;;
  112 000000CC 49D6            ldr              r1,=0x20000200 
                                                            ;plaintext position
                                                            
  113 000000CE 4AD7            ldr              r2,=0x20000220 ;initial key pos
                                                            ition
  114 000000D0         
  115 000000D0 B500            STMFD            sp!,{lr}
  116 000000D2 F7FF FFFE       BL               __addroundkey
  117 000000D6 F85D EB04       LDMFD            sp!,{lr}
  118 000000DA         
  119 000000DA         
  120 000000DA         ;;;;;;;;;;;;;9 rounds;;;;;;;;;;;;;;;
  121 000000DA F04F 0A00       mov              r10,#0x00
  122 000000DE         round_loop
  123 000000DE B500            STMFD            sp!,{lr}
  124 000000E0 F7FF FFFE       BL               __round
  125 000000E4 F85D EB04       LDMFD            sp!,{lr}
  126 000000E8         
  127 000000E8 F10A 0A01       add              r10,r10,#0x01
  128 000000EC F1BA 0F09       cmp              r10,#0x09
  129 000000F0 D1F5            bne              round_loop
  130 000000F2         
  131 000000F2         
  132 000000F2         ;;;;;;;;;;;;;;;;10th last round;;;;;
  133 000000F2         ;;;;;;;;;;;;;;;;__subbytes;;;;;;;;;;;;;;;;;;;;;
  134 000000F2 49CD            ldr              r1,=0x20000200 ;argument to __s
                                                            ubbytes
  135 000000F4 F04F 0200       mov              r2,#0x00    ;counter for 128bit
                                                            s text (16 * 1 byte
                                                            )
  136 000000F8         next_byte_last_round
  137 000000F8 5C8B            ldrb             r3,[r1,r2]
  138 000000FA         
  139 000000FA B500            STMFD            sp!,{lr}
  140 000000FC F7FF FFFE       BL               __subbytes
  141 00000100 F85D EB04       LDMFD            sp!,{lr}
  142 00000104         
  143 00000104 548B            strb             r3,[r1,r2]
  144 00000106         
  145 00000106 F102 0201       add              r2,r2,#0x01
  146 0000010A 2A10            cmp              r2,#16
  147 0000010C D1F4            bne              next_byte_last_round
  148 0000010E         
  149 0000010E         



ARM Macro Assembler    Page 4 


  150 0000010E         ;;;;;;;;;;;;;;;;;__shiftrows;;;;;;;;;;;;;;;;;;;;;;
  151 0000010E B500            STMFD            sp!,{lr}
  152 00000110 F7FF FFFE       BL               __shiftrows
  153 00000114 F85D EB04       LDMFD            sp!,{lr}
  154 00000118         
  155 00000118         ;;;;;;;;;;;;;;;;;__addroundkey;;;;;;;;;;;;;;;;;;;;
  156 00000118 49C3            ldr              r1,=0x20000200 ;argument to __m
                                                            ixcolumns
  157 0000011A 4AC5            ldr              r2,=0x200002C0 ;argument to __m
                                                            ixcolumns
  158 0000011C         
  159 0000011C B500            STMFD            sp!,{lr}
  160 0000011E F7FF FFFE       BL               __addroundkey
  161 00000122 F85D EB04       LDMFD            sp!,{lr}
  162 00000126         
  163 00000126 E8BD 1FFE       POP              {r1-r12}
  164 0000012A 4770            BX               R14
  165 0000012C                 ENDP
  166 0000012C         
  167 0000012C         
  168 0000012C         __round PROC
  169 0000012C                 EXPORT           __round
  170 0000012C         
  171 0000012C         
  172 0000012C         ;;;;;;;;;;;;;;;;;__subbytes;;;;;;;;;;;;;;;;;;;;
  173 0000012C 49BE            ldr              r1,=0x20000200 ;argument to __s
                                                            ubbytes
  174 0000012E F04F 0200       mov              r2,#0x00    ;counter for 128bit
                                                            s text (16 * 1 byte
                                                            )
  175 00000132         next_byte
  176 00000132 5C8B            ldrb             r3,[r1,r2]
  177 00000134         
  178 00000134 B500            STMFD            sp!,{lr}
  179 00000136 F7FF FFFE       BL               __subbytes
  180 0000013A F85D EB04       LDMFD            sp!,{lr}
  181 0000013E         
  182 0000013E 548B            strb             r3,[r1,r2]
  183 00000140         
  184 00000140 F102 0201       add              r2,r2,#0x01
  185 00000144 2A10            cmp              r2,#16
  186 00000146 D1F4            bne              next_byte
  187 00000148         
  188 00000148         
  189 00000148         ;;;;;;;;;;;;;;;;;__shiftrows;;;;;;;;;;;;;;;;;;;;;
  190 00000148         ;argument already in r1
  191 00000148 B500            STMFD            sp!,{lr}
  192 0000014A F7FF FFFE       BL               __shiftrows
  193 0000014E F85D EB04       LDMFD            sp!,{lr}
  194 00000152         
  195 00000152         
  196 00000152         
  197 00000152         ;;;;;;;;;;;;;;;;__mixcolumns;;;;;;;;;;;;;;;;;;;;;;
  198 00000152 49B5            ldr              r1,=0x20000200 ;argument to __m
                                                            ixcolumns
  199 00000154 F04F 0C00       mov              r12,#0x00   ;counter for 128bit
                                                            s text (16 * 1 byte
                                                            )
  200 00000158         next_column



ARM Macro Assembler    Page 5 


  201 00000158         
  202 00000158 B500            STMFD            sp!,{lr}
  203 0000015A F7FF FFFE       BL               __mixcolumns
  204 0000015E F85D EB04       LDMFD            sp!,{lr}
  205 00000162         
  206 00000162 F10C 0C01       add              r12,r12,#0x01
  207 00000166 F101 0104       add              r1,r1,#4
  208 0000016A F1BC 0F04       cmp              r12,#4
  209 0000016E D1F3            bne              next_column
  210 00000170         
  211 00000170         ;;;;;;;;;;;;;;;;;__addroundkey;;;;;;;;;;;;;;;;;;;;;
  212 00000170 49AD            ldr              r1,=0x20000200 ;1st argument to
                                                             __addroundkey
  213 00000172 4AB0            ldr              r2,=0x20000230 ;
  214 00000174         ;
  215 00000174 46D1            mov              r9,r10      ;
  216 00000176 EA4F 1909       lsl              r9,#4       ;
  217 0000017A 444A            add              r2,r2,r9    ;2nd argument to __
                                                            addroundkey
  218 0000017C         
  219 0000017C B500            STMFD            sp!,{lr}
  220 0000017E F7FF FFFE       BL               __addroundkey
  221 00000182 F85D EB04       LDMFD            sp!,{lr}
  222 00000186         
  223 00000186 4770            BX               R14
  224 00000188                 ENDP
  225 00000188         
  226 00000188         __addroundkey
                               PROC
  227 00000188                 EXPORT           __addroundkey
  228 00000188         ;inputs:  r1 1st operand location
  229 00000188         ;   r2 2nd operand location
  230 00000188         
  231 00000188 F04F 0300       mov              r3,#0
  232 0000018C         
  233 0000018C         xor_128
  234 0000018C 58CC            ldr              r4,[r1,r3]
  235 0000018E 58D5            ldr              r5,[r2,r3]
  236 00000190 EA84 0605       eor              r6,r4,r5
  237 00000194 50CE            str              r6,[r1,r3]
  238 00000196 F103 0304       add              r3,r3,#0x04
  239 0000019A 2B10            cmp              r3,#0x010
  240 0000019C D1F6            bne              xor_128
  241 0000019E         
  242 0000019E 4770            BX               R14
  243 000001A0                 ENDP
  244 000001A0         
  245 000001A0         __subbytes
                               PROC
  246 000001A0                 EXPORT           __subbytes
  247 000001A0         ;input: 1 byte @r3
  248 000001A0         
  249 000001A0 F8DF 8294       ldr              r8,=0x20000216
  250 000001A4 F8D8 7000       ldr              r7,[r8]
  251 000001A8 EB07 0603       add              r6,r7,r3
  252 000001AC 7833            ldrb             r3,[r6]
  253 000001AE         
  254 000001AE 4770            BX               R14
  255 000001B0                 ENDP



ARM Macro Assembler    Page 6 


  256 000001B0         
  257 000001B0         __shiftrows
                               PROC
  258 000001B0                 EXPORT           __shiftrows
  259 000001B0         ;input: 1 address @r1
  260 000001B0         
  261 000001B0         ;;;row0
  262 000001B0         ;remains same 
  263 000001B0         ;;;row 1
  264 000001B0 784A            ldrb             r2,[r1,#1]
  265 000001B2         
  266 000001B2 794B            ldrb             r3,[r1,#5]
  267 000001B4 704B            strb             r3,[r1,#1]
  268 000001B6         
  269 000001B6 7A4B            ldrb             r3,[r1,#9]
  270 000001B8 714B            strb             r3,[r1,#5]
  271 000001BA         
  272 000001BA 7B4B            ldrb             r3,[r1,#13]
  273 000001BC 724B            strb             r3,[r1,#9]
  274 000001BE         
  275 000001BE 734A            strb             r2,[r1,#13]
  276 000001C0         
  277 000001C0         ;;;row 2
  278 000001C0 788A            ldrb             r2,[r1,#2]
  279 000001C2         
  280 000001C2 798B            ldrb             r3,[r1,#6]
  281 000001C4         
  282 000001C4         
  283 000001C4 7A8C            ldrb             r4,[r1,#10]
  284 000001C6 708C            strb             r4,[r1,#2]
  285 000001C8         
  286 000001C8 7B8C            ldrb             r4,[r1,#14]
  287 000001CA 718C            strb             r4,[r1,#6]
  288 000001CC         
  289 000001CC 728A            strb             r2,[r1,#10]
  290 000001CE 738B            strb             r3,[r1,#14]
  291 000001D0         
  292 000001D0         
  293 000001D0         ;;;row 3
  294 000001D0 7BCA            ldrb             r2,[r1,#15]
  295 000001D2         
  296 000001D2 7ACB            ldrb             r3,[r1,#11]
  297 000001D4 73CB            strb             r3,[r1,#15]
  298 000001D6         
  299 000001D6 79CB            ldrb             r3,[r1,#7]
  300 000001D8 72CB            strb             r3,[r1,#11]
  301 000001DA         
  302 000001DA 78CB            ldrb             r3,[r1,#3]
  303 000001DC 71CB            strb             r3,[r1,#7]
  304 000001DE         
  305 000001DE 70CA            strb             r2,[r1,#3]
  306 000001E0         
  307 000001E0         
  308 000001E0 4770            BX               R14
  309 000001E2                 ENDP
  310 000001E2         
  311 000001E2         __mixcolumns
                               PROC
  312 000001E2                 EXPORT           __mixcolumns



ARM Macro Assembler    Page 7 


  313 000001E2         ;input: 1 address @r1
  314 000001E2 4A96            ldr              r2,=0x20000300
  315 000001E4 6812            ldr              r2,[r2]
  316 000001E6 4B96            ldr              r3,=0x20000306
  317 000001E8 681B            ldr              r3,[r3]
  318 000001EA         
  319 000001EA         ;element 1
  320 000001EA 780C            ldrb             r4,[r1]
  321 000001EC 5D15            ldrb             r5,[r2,r4]  ;mc2[r4]
  322 000001EE         
  323 000001EE 784C            ldrb             r4,[r1,#1]
  324 000001F0 5D1E            ldrb             r6,[r3,r4]  ;mc3[r4]
  325 000001F2         
  326 000001F2 EA85 0506       eor              r5,r5,r6
  327 000001F6         
  328 000001F6 788C            ldrb             r4,[r1,#2]
  329 000001F8 EA85 0504       eor              r5,r5,r4
  330 000001FC         
  331 000001FC 78CC            ldrb             r4,[r1,#3]
  332 000001FE EA85 0704       eor              r7,r5,r4    ;element 1 in r7
  333 00000202         ;element 2
  334 00000202 784C            ldrb             r4,[r1,#1]
  335 00000204 5D15            ldrb             r5,[r2,r4]  ;mc2[r4]
  336 00000206         
  337 00000206 788C            ldrb             r4,[r1,#2]
  338 00000208 5D1E            ldrb             r6,[r3,r4]  ;mc3[r4]
  339 0000020A         
  340 0000020A EA85 0506       eor              r5,r5,r6
  341 0000020E         
  342 0000020E 780C            ldrb             r4,[r1]
  343 00000210 EA85 0504       eor              r5,r5,r4
  344 00000214         
  345 00000214 78CC            ldrb             r4,[r1,#3]
  346 00000216 EA85 0804       eor              r8,r5,r4    ;element 2 in r8
  347 0000021A         ;element 3
  348 0000021A 788C            ldrb             r4,[r1,#2]
  349 0000021C 5D15            ldrb             r5,[r2,r4]  ;mc2[r4]
  350 0000021E         
  351 0000021E 78CC            ldrb             r4,[r1,#3]
  352 00000220 5D1E            ldrb             r6,[r3,r4]  ;mc3[r4]
  353 00000222         
  354 00000222 EA85 0506       eor              r5,r5,r6
  355 00000226         
  356 00000226 780C            ldrb             r4,[r1]
  357 00000228 EA85 0504       eor              r5,r5,r4
  358 0000022C         
  359 0000022C 784C            ldrb             r4,[r1,#1]
  360 0000022E EA85 0904       eor              r9,r5,r4    ;element 3 in r9
  361 00000232         ;element 4
  362 00000232 78CC            ldrb             r4,[r1,#3]
  363 00000234 5D15            ldrb             r5,[r2,r4]  ;mc2[r4]
  364 00000236         
  365 00000236 780C            ldrb             r4,[r1]
  366 00000238 5D1E            ldrb             r6,[r3,r4]  ;mc3[r4]
  367 0000023A         
  368 0000023A EA85 0506       eor              r5,r5,r6
  369 0000023E         
  370 0000023E 784C            ldrb             r4,[r1,#1]
  371 00000240 EA85 0504       eor              r5,r5,r4



ARM Macro Assembler    Page 8 


  372 00000244         
  373 00000244 788C            ldrb             r4,[r1,#2]
  374 00000246 EA85 0B04       eor              r11,r5,r4   ;element 4 in r11
  375 0000024A         ;store elements
  376 0000024A 700F            strb             r7,[r1]
  377 0000024C F881 8001       strb             r8,[r1,#1]
  378 00000250 F881 9002       strb             r9,[r1,#2]
  379 00000254 F881 B003       strb             r11,[r1,#3]
  380 00000258         
  381 00000258         
  382 00000258         
  383 00000258 4770            BX               R14
  384 0000025A                 ENDP
  385 0000025A         
  386 0000025A         __decr  PROC
  387 0000025A                 EXPORT           __decr
  388 0000025A E92D 1FFE       PUSH             {r1-r12}
  389 0000025E         
  390 0000025E         ;;;;;;;;;;;;;;addroundkey;;;;;;;;;;;
  391 0000025E 4972            ldr              r1,=0x20000200
  392 00000260 4A73            ldr              r2,=0x200002C0
  393 00000262         
  394 00000262 B500            STMFD            sp!,{lr}
  395 00000264 F7FF FFFE       BL               __addroundkey
  396 00000268 F85D EB04       LDMFD            sp!,{lr}
  397 0000026C         
  398 0000026C         
  399 0000026C         ;;;;;;;;;;;;;9 rounds;;;;;;;;;;;;;;;
  400 0000026C F04F 0A00       mov              r10,#0x00
  401 00000270         decround_loop
  402 00000270 B500            STMFD            sp!,{lr}
  403 00000272 F7FF FFFE       BL               __decround
  404 00000276 F85D EB04       LDMFD            sp!,{lr}
  405 0000027A         
  406 0000027A F10A 0A01       add              r10,r10,#0x01
  407 0000027E F1BA 0F09       cmp              r10,#0x09
  408 00000282 D1F5            bne              decround_loop
  409 00000284         
  410 00000284         
  411 00000284         ;;;;;;;;;;;;;;;;10th last round;;;;;
  412 00000284         ;;;;;;;;;;;;;;;;;;__shiftrows;;;;;;;;;;;;;;;;;;;
  413 00000284 4968            ldr              r1,=0x20000200 ;argument to __s
                                                            ubbytes
  414 00000286         
  415 00000286 B500            STMFD            sp!,{lr}
  416 00000288 F7FF FFFE       BL               __invshiftrows
  417 0000028C F85D EB04       LDMFD            sp!,{lr}
  418 00000290         
  419 00000290         
  420 00000290         ;;;;;;;;;;;;;;;;;;__subbytes;;;;;;;;;;;;;;;;;;;;;
  421 00000290 4965            ldr              r1,=0x20000200 ;argument to __s
                                                            ubbytes
  422 00000292 F04F 0200       mov              r2,#0x00    ;counter for 128bit
                                                            s text (16 * 1 byte
                                                            )
  423 00000296         inv_next_byte_last_round
  424 00000296 5C8B            ldrb             r3,[r1,r2]
  425 00000298         
  426 00000298 B500            STMFD            sp!,{lr}



ARM Macro Assembler    Page 9 


  427 0000029A F7FF FFFE       BL               __invsubbytes
  428 0000029E F85D EB04       LDMFD            sp!,{lr}
  429 000002A2         
  430 000002A2 548B            strb             r3,[r1,r2]
  431 000002A4         
  432 000002A4 F102 0201       add              r2,r2,#0x01
  433 000002A8 2A10            cmp              r2,#16
  434 000002AA D1F4            bne              inv_next_byte_last_round
  435 000002AC         
  436 000002AC         
  437 000002AC         ;;;;;;;;;;;;;;;;;;__addroundkey;;;;;;;;;;;;;;;;;;;;
  438 000002AC 495E            ldr              r1,=0x20000200 ;argument to __m
                                                            ixcolumns
  439 000002AE 4A5F            ldr              r2,=0x20000220 ;argument to __m
                                                            ixcolumns
  440 000002B0         
  441 000002B0 B500            STMFD            sp!,{lr}
  442 000002B2 F7FF FFFE       BL               __addroundkey
  443 000002B6 F85D EB04       LDMFD            sp!,{lr}
  444 000002BA         
  445 000002BA E8BD 1FFE       POP              {r1-r12}
  446 000002BE 4770            BX               R14
  447 000002C0                 ENDP
  448 000002C0         
  449 000002C0         
  450 000002C0         __decround
                               PROC
  451 000002C0                 EXPORT           __decround
  452 000002C0         
  453 000002C0         ;;;;;;;;;;;;;;;;;;__invshiftrows;;;;;;;;;;;;;;;;;
  454 000002C0 4959            ldr              r1,=0x20000200 ;argument to __s
                                                            ubbytes
  455 000002C2         
  456 000002C2 B500            STMFD            sp!,{lr}
  457 000002C4 F7FF FFFE       BL               __invshiftrows
  458 000002C8 F85D EB04       LDMFD            sp!,{lr}
  459 000002CC         
  460 000002CC         ;;;;;;;;;;;;;;;;;__invsubbytes;;;;;;;;;;;;;;;;;;;;;;
  461 000002CC 4956            ldr              r1,=0x20000200 ;argument to __s
                                                            ubbytes
  462 000002CE F04F 0200       mov              r2,#0x00    ;counter for 128bit
                                                            s text (16 * 1 byte
                                                            )
  463 000002D2         dec_next_byte
  464 000002D2 5C8B            ldrb             r3,[r1,r2]
  465 000002D4         
  466 000002D4 B500            STMFD            sp!,{lr}
  467 000002D6 F7FF FFFE       BL               __invsubbytes
  468 000002DA F85D EB04       LDMFD            sp!,{lr}
  469 000002DE         
  470 000002DE 548B            strb             r3,[r1,r2]
  471 000002E0         
  472 000002E0 F102 0201       add              r2,r2,#0x01
  473 000002E4 2A10            cmp              r2,#16
  474 000002E6 D1F4            bne              dec_next_byte
  475 000002E8         
  476 000002E8         ;;;;;;;;;;;;;;;;;;__addroundkey;;;;;;;;;;;;;;;;;;
  477 000002E8 494F            ldr              r1,=0x20000200 ;argument to __a
                                                            ddroundkey



ARM Macro Assembler    Page 10 


  478 000002EA 4A56            ldr              r2,=0x200002B0 ;argument to __a
                                                            ddroundkey
  479 000002EC         
  480 000002EC 46D1            mov              r9,r10
  481 000002EE EA4F 1909       lsl              r9,#4
  482 000002F2 EBA2 0209       sub              r2,r2,r9
  483 000002F6         
  484 000002F6 B500            STMFD            sp!,{lr}
  485 000002F8 F7FF FFFE       BL               __addroundkey
  486 000002FC F85D EB04       LDMFD            sp!,{lr}
  487 00000300         
  488 00000300         ;;;;;;;;;;;;;;;;;;__invmixcolumns;;;;;;;;;;;;;;;;;
  489 00000300 4949            ldr              r1,=0x20000200 ;argument to __m
                                                            ixcolumns
  490 00000302         
  491 00000302 B500            STMFD            sp!,{lr}
  492 00000304 F7FF FFFE       BL               __invmixcolumns
  493 00000308 F85D EB04       LDMFD            sp!,{lr}
  494 0000030C         
  495 0000030C F101 0104       add              r1,r1,#4
  496 00000310         
  497 00000310 B500            STMFD            sp!,{lr}
  498 00000312 F7FF FFFE       BL               __invmixcolumns
  499 00000316 F85D EB04       LDMFD            sp!,{lr}
  500 0000031A         
  501 0000031A F101 0104       add              r1,r1,#4
  502 0000031E         
  503 0000031E B500            STMFD            sp!,{lr}
  504 00000320 F7FF FFFE       BL               __invmixcolumns
  505 00000324 F85D EB04       LDMFD            sp!,{lr}
  506 00000328         
  507 00000328 F101 0104       add              r1,r1,#4
  508 0000032C         
  509 0000032C B500            STMFD            sp!,{lr}
  510 0000032E F7FF FFFE       BL               __invmixcolumns
  511 00000332 F85D EB04       LDMFD            sp!,{lr}
  512 00000336         
  513 00000336 4770            BX               R14
  514 00000338                 ENDP
  515 00000338         
  516 00000338         __invshiftrows
                               PROC
  517 00000338                 EXPORT           __invshiftrows
  518 00000338         ;input: 1 address @r1
  519 00000338         
  520 00000338         ;;;row0
  521 00000338         ;remains same 
  522 00000338         ;;;row 1
  523 00000338 7B4A            ldrb             r2,[r1,#13]
  524 0000033A         
  525 0000033A 7A4B            ldrb             r3,[r1,#9]
  526 0000033C 734B            strb             r3,[r1,#13]
  527 0000033E         
  528 0000033E 794B            ldrb             r3,[r1,#5]
  529 00000340 724B            strb             r3,[r1,#9]
  530 00000342         
  531 00000342 784B            ldrb             r3,[r1,#1]
  532 00000344 714B            strb             r3,[r1,#5]
  533 00000346         



ARM Macro Assembler    Page 11 


  534 00000346 704A            strb             r2,[r1,#1]
  535 00000348         
  536 00000348         ;;;row 2
  537 00000348 7A8A            ldrb             r2,[r1,#10]
  538 0000034A 7B8B            ldrb             r3,[r1,#14]
  539 0000034C         
  540 0000034C 798C            ldrb             r4,[r1,#6]
  541 0000034E 738C            strb             r4,[r1,#14]
  542 00000350         
  543 00000350 788C            ldrb             r4,[r1,#2]
  544 00000352 728C            strb             r4,[r1,#10]
  545 00000354         
  546 00000354 708A            strb             r2,[r1,#2]
  547 00000356 718B            strb             r3,[r1,#6]
  548 00000358         
  549 00000358         
  550 00000358         ;;;row 3
  551 00000358 78CA            ldrb             r2,[r1,#3]
  552 0000035A         
  553 0000035A 79CB            ldrb             r3,[r1,#7]
  554 0000035C 70CB            strb             r3,[r1,#3]
  555 0000035E         
  556 0000035E 7ACB            ldrb             r3,[r1,#11]
  557 00000360 71CB            strb             r3,[r1,#7]
  558 00000362         
  559 00000362 7BCB            ldrb             r3,[r1,#15]
  560 00000364 72CB            strb             r3,[r1,#11]
  561 00000366         
  562 00000366 73CA            strb             r2,[r1,#15]
  563 00000368         
  564 00000368         
  565 00000368 4770            BX               R14
  566 0000036A                 ENDP
  567 0000036A         
  568 0000036A         __invsubbytes
                               PROC
  569 0000036A                 EXPORT           __invsubbytes
  570 0000036A         ;input: 1 byte @r3
  571 0000036A         
  572 0000036A F8DF 80DC       ldr              r8,=0x2000021A
  573 0000036E F8D8 7000       ldr              r7,[r8]
  574 00000372 EB07 0603       add              r6,r7,r3
  575 00000376 7833            ldrb             r3,[r6]
  576 00000378         
  577 00000378 4770            BX               R14
  578 0000037A                 ENDP
  579 0000037A         
  580 0000037A         __invmixcolumns
                               PROC
  581 0000037A                 EXPORT           __invmixcolumns
  582 0000037A         ;input: 1 address @r1
  583 0000037A 4A34            ldr              r2,=0x2000030c
  584 0000037C 6812            ldr              r2,[r2]
  585 0000037E 4B34            ldr              r3,=0x20000312
  586 00000380 681B            ldr              r3,[r3]
  587 00000382 4C34            ldr              r4,=0x20000318
  588 00000384 6824            ldr              r4,[r4]
  589 00000386 4D34            ldr              r5,=0x2000031e
  590 00000388 682D            ldr              r5,[r5]



ARM Macro Assembler    Page 12 


  591 0000038A         
  592 0000038A         ;element 1
  593 0000038A 780E            ldrb             r6,[r1]
  594 0000038C 5DAF            ldrb             r7,[r5,r6]  ;mc14[r6]
  595 0000038E         
  596 0000038E 784E            ldrb             r6,[r1,#1]
  597 00000390 F813 8006       ldrb             r8,[r3,r6]  ;mc11[r6]
  598 00000394         
  599 00000394 EA87 0708       eor              r7,r7,r8
  600 00000398         
  601 00000398 788E            ldrb             r6,[r1,#2]
  602 0000039A F814 8006       ldrb             r8,[r4,r6]  ;mc13[r6]
  603 0000039E         
  604 0000039E EA87 0708       eor              r7,r7,r8
  605 000003A2         
  606 000003A2 78CE            ldrb             r6,[r1,#3]
  607 000003A4 F812 8006       ldrb             r8,[r2,r6]  ;mc9[r6]
  608 000003A8         
  609 000003A8 EA87 0708       eor              r7,r7,r8    ;element 1 in r7
  610 000003AC         
  611 000003AC         ;element 2
  612 000003AC 780E            ldrb             r6,[r1]
  613 000003AE F812 8006       ldrb             r8,[r2,r6]  ;mc9[r6]
  614 000003B2         
  615 000003B2 784E            ldrb             r6,[r1,#1]
  616 000003B4 F815 9006       ldrb             r9,[r5,r6]  ;mc14[r6]
  617 000003B8         
  618 000003B8 EA89 0808       eor              r8,r9,r8
  619 000003BC         
  620 000003BC 788E            ldrb             r6,[r1,#2]
  621 000003BE F813 9006       ldrb             r9,[r3,r6]  ;mc11[r6]
  622 000003C2         
  623 000003C2 EA89 0808       eor              r8,r9,r8
  624 000003C6         
  625 000003C6 78CE            ldrb             r6,[r1,#3]
  626 000003C8 F814 9006       ldrb             r9,[r4,r6]  ;mc13[r6]
  627 000003CC         
  628 000003CC EA89 0808       eor              r8,r9,r8    ;element 1 in r7
  629 000003D0         
  630 000003D0         ;element 3
  631 000003D0 780E            ldrb             r6,[r1]
  632 000003D2 F814 9006       ldrb             r9,[r4,r6]  ;mc13[r6]
  633 000003D6         
  634 000003D6 784E            ldrb             r6,[r1,#1]
  635 000003D8 F812 B006       ldrb             r11,[r2,r6] ;mc9[r6]
  636 000003DC         
  637 000003DC EA89 090B       eor              r9,r9,r11
  638 000003E0         
  639 000003E0 788E            ldrb             r6,[r1,#2]
  640 000003E2 F815 B006       ldrb             r11,[r5,r6] ;mc14[r6]
  641 000003E6         
  642 000003E6 EA89 090B       eor              r9,r9,r11
  643 000003EA         
  644 000003EA 78CE            ldrb             r6,[r1,#3]
  645 000003EC F813 B006       ldrb             r11,[r3,r6] ;mc11[r6]
  646 000003F0         
  647 000003F0 EA89 090B       eor              r9,r9,r11   ;element 1 in r7
  648 000003F4         
  649 000003F4         ;element 4



ARM Macro Assembler    Page 13 


  650 000003F4 780E            ldrb             r6,[r1]
  651 000003F6 F813 B006       ldrb             r11,[r3,r6] ;mc11[r6]
  652 000003FA         
  653 000003FA 784E            ldrb             r6,[r1,#1]
  654 000003FC F814 C006       ldrb             r12,[r4,r6] ;mc13[r6]
  655 00000400         
  656 00000400 EA8B 0B0C       eor              r11,r11,r12
  657 00000404         
  658 00000404 788E            ldrb             r6,[r1,#2]
  659 00000406 F812 C006       ldrb             r12,[r2,r6] ;mc9[r6]
  660 0000040A         
  661 0000040A EA8B 0B0C       eor              r11,r11,r12
  662 0000040E         
  663 0000040E 78CE            ldrb             r6,[r1,#3]
  664 00000410 F815 C006       ldrb             r12,[r5,r6] ;mc14[r6]
  665 00000414         
  666 00000414 EA8B 0B0C       eor              r11,r11,r12 ;element 1 in r7
  667 00000418         
  668 00000418         ;store elements
  669 00000418 700F            strb             r7,[r1]
  670 0000041A F881 8001       strb             r8,[r1,#1]
  671 0000041E F881 9002       strb             r9,[r1,#2]
  672 00000422 F881 B003       strb             r11,[r1,#3]
  673 00000426         
  674 00000426         
  675 00000426         
  676 00000426 4770            BX               R14
  677 00000428                 ENDP
  678 00000428         
  679 00000428         
  680 00000428                 END
              20000200 
              20000220 
              200002C0 
              20000230 
              20000216 
              20000300 
              20000306 
              200002B0 
              2000021A 
              2000030C 
              20000312 
              20000318 
              2000031E 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend="usb cdc vitrual com port\aes.d" -o"usb cdc vitrual com port\ae
s.o" -I"C:\Users\TSAFAS\Dropbox\Project\USB CDC Vitrual Com Port\MDK-ARM\RTE\_U
SB_CDC_Vitrual_Com_Port" -IE:\keil\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Include -IE:\
keil\ARM\PACK\Keil\STM32F4xx_DFP\2.10.0\Drivers\CMSIS\Device\ST\STM32F4xx\Inclu
de --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__U
VISION_VERSION SETA 522" --predefine="_RTE_ SETA 1" --predefine="STM32F407xx SE
TA 1" --list=aes.lst "USB CDC Vitrual Com Port\aes.s"



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SIMPLE_PROG 00000000

Symbol: SIMPLE_PROG
   Definitions
      At line 1 in file USB
   Uses
      None
Comment: SIMPLE_PROG unused
__addroundkey 00000188

Symbol: __addroundkey
   Definitions
      At line 226 in file USB
   Uses
      At line 116 in file USB
      At line 160 in file USB
      At line 220 in file USB
      At line 227 in file USB
      At line 395 in file USB
      At line 442 in file USB
      At line 485 in file USB

__decr 0000025A

Symbol: __decr
   Definitions
      At line 386 in file USB
   Uses
      At line 387 in file USB
Comment: __decr used once
__decround 000002C0

Symbol: __decround
   Definitions
      At line 450 in file USB
   Uses
      At line 403 in file USB
      At line 451 in file USB

__encr 000000C8

Symbol: __encr
   Definitions
      At line 107 in file USB
   Uses
      At line 108 in file USB
Comment: __encr used once
__invmixcolumns 0000037A

Symbol: __invmixcolumns
   Definitions
      At line 580 in file USB
   Uses
      At line 492 in file USB
      At line 498 in file USB
      At line 504 in file USB
      At line 510 in file USB
      At line 581 in file USB




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

__invshiftrows 00000338

Symbol: __invshiftrows
   Definitions
      At line 516 in file USB
   Uses
      At line 416 in file USB
      At line 457 in file USB
      At line 517 in file USB

__invsubbytes 0000036A

Symbol: __invsubbytes
   Definitions
      At line 568 in file USB
   Uses
      At line 427 in file USB
      At line 467 in file USB
      At line 569 in file USB

__keyexp 00000000

Symbol: __keyexp
   Definitions
      At line 4 in file USB
   Uses
      At line 5 in file USB
Comment: __keyexp used once
__mixcolumns 000001E2

Symbol: __mixcolumns
   Definitions
      At line 311 in file USB
   Uses
      At line 203 in file USB
      At line 312 in file USB

__round 0000012C

Symbol: __round
   Definitions
      At line 168 in file USB
   Uses
      At line 124 in file USB
      At line 169 in file USB

__shiftrows 000001B0

Symbol: __shiftrows
   Definitions
      At line 257 in file USB
   Uses
      At line 152 in file USB
      At line 192 in file USB
      At line 258 in file USB

__subbytes 000001A0

Symbol: __subbytes



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 245 in file USB
   Uses
      At line 29 in file USB
      At line 37 in file USB
      At line 45 in file USB
      At line 53 in file USB
      At line 140 in file USB
      At line 179 in file USB
      At line 246 in file USB

dec_next_byte 000002D2

Symbol: dec_next_byte
   Definitions
      At line 463 in file USB
   Uses
      At line 474 in file USB
Comment: dec_next_byte used once
decround_loop 00000270

Symbol: decround_loop
   Definitions
      At line 401 in file USB
   Uses
      At line 408 in file USB
Comment: decround_loop used once
end_key 000000C2

Symbol: end_key
   Definitions
      At line 100 in file USB
   Uses
      At line 96 in file USB
Comment: end_key used once
inv_next_byte_last_round 00000296

Symbol: inv_next_byte_last_round
   Definitions
      At line 423 in file USB
   Uses
      At line 434 in file USB
Comment: inv_next_byte_last_round used once
key_round 00000014

Symbol: key_round
   Definitions
      At line 15 in file USB
   Uses
      At line 88 in file USB
      At line 92 in file USB
      At line 99 in file USB

last_round 000000B2

Symbol: last_round
   Definitions
      At line 94 in file USB
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 84 in file USB
Comment: last_round used once
next_byte 00000132

Symbol: next_byte
   Definitions
      At line 175 in file USB
   Uses
      At line 186 in file USB
Comment: next_byte used once
next_byte_last_round 000000F8

Symbol: next_byte_last_round
   Definitions
      At line 136 in file USB
   Uses
      At line 147 in file USB
Comment: next_byte_last_round used once
next_column 00000158

Symbol: next_column
   Definitions
      At line 200 in file USB
   Uses
      At line 209 in file USB
Comment: next_column used once
round_loop 000000DE

Symbol: round_loop
   Definitions
      At line 122 in file USB
   Uses
      At line 129 in file USB
Comment: round_loop used once
xor_128 0000018C

Symbol: xor_128
   Definitions
      At line 233 in file USB
   Uses
      At line 240 in file USB
Comment: xor_128 used once
24 symbols
364 symbols in table
